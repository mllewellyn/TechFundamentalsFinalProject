{
    "collab_server" : "",
    "contents" : "library(readxl)\nnyc_sales_col_types_all = c(\"text\", \"text\", \"text\", \n                            \"text\", \"numeric\", \"numeric\", \"text\", \n                            \"text\", \"text\", \"text\", \"text\", \"numeric\", \n                            \"numeric\", \"numeric\", \"numeric\", \n                            \"numeric\", \"numeric\", \"text\", \"text\", \n                            \"numeric\", \"numeric\")\nnyc_sales_col_types_some = c(\"blank\", \"text\", \"text\", \n                             \"text\", \"numeric\", \"numeric\", \"text\", \n                             \"text\", \"blank\", \"blank\", \"numeric\", \n                             \"numeric\", \"numeric\", \"numeric\", \n                             \"numeric\", \"numeric\", \"numeric\", \n                             \"text\", \"text\", \"numeric\", \"numeric\")\n\npath <- \"C:/Users/Maxwell/Dropbox/RPI/Spring 2017/ITWS-6600 Data Analytics/Assignments/Assignment 4/data/rollingsales_brooklyn.xls\"\n# path <- \"~/Dropbox/RPI/Spring 2017/ITWS-6600 Data Analytics/Assignments/Assignment 4/data/rollingsales_brooklyn.xls\"\nrollingsales_brooklyn <- read_excel(path, col_types = nyc_sales_col_types_some, skip = 4)\n\n\nfactorize <- function(nyc_sales_dataset) {\n  nyc_sales_dataset$NEIGHBORHOOD <- as.factor(nyc_sales_dataset$NEIGHBORHOOD)\n  nyc_sales_dataset$`BUILDING CLASS CATEGORY` <- as.factor(nyc_sales_dataset$`BUILDING CLASS CATEGORY`)\n  nyc_sales_dataset$`TAX CLASS AT PRESENT` <- as.factor(nyc_sales_dataset$`TAX CLASS AT PRESENT`)\n  nyc_sales_dataset$BLOCK <- as.factor(nyc_sales_dataset$BLOCK)\n  nyc_sales_dataset$LOT <- as.factor(nyc_sales_dataset$LOT)\n  nyc_sales_dataset$`EASE-MENT` <- as.factor(nyc_sales_dataset$`EASE-MENT`)\n  nyc_sales_dataset$`BUILDING CLASS AT PRESENT` <- as.factor(nyc_sales_dataset$`BUILDING CLASS AT PRESENT`)\n  nyc_sales_dataset$`ZIP CODE` <- as.factor(nyc_sales_dataset$`ZIP CODE`)\n  nyc_sales_dataset$`TAX CLASS AT TIME OF SALE` <- as.factor(nyc_sales_dataset$`TAX CLASS AT TIME OF SALE`)\n  nyc_sales_dataset$`BUILDING CLASS AT TIME OF SALE` <- as.factor(nyc_sales_dataset$`BUILDING CLASS AT TIME OF SALE`)\n  \n  # colnames(nyc_sales_dataset) <- c(\"BOROUGH\", \"NEIGHBORHOOD\", \"BUILDING.CLASS.CATEGORY\", \"TAX.CLASS.AT.PRESENT\",\n  #                               \"BLOCK\", \"LOT\", \"EASEMENT\", \"BUILDING.CLASS.AT.PRESENT\", \"ADDRESS\",\n  #                               \"APARTMENT.NUMBER\", \"ZIP.CODE\", \"RESIDENTIAL.UNITS\", \"COMMERCIAL.UNITS\",\n  #                               \"TOTAL.UNITS\", \"LAND.SQUARE.FEET\", \"GROSS.SQUARE.FEET\", \"YEAR.BUILT\",\n  #                               \"TAX.CLASS.AT.TIME.OF.SALE\", \"BUILDING.CLASS.AT.TIME.OF.SALE\", \"SALE.PRICE\",\n  #                               \"SALE.DATE\")\n  colnames(nyc_sales_dataset) <- c(\"NEIGHBORHOOD\", \"BUILDING.CLASS.CATEGORY\", \"TAX.CLASS.AT.PRESENT\",\n                                   \"BLOCK\", \"LOT\", \"EASEMENT\", \"BUILDING.CLASS.AT.PRESENT\",\n                                   \"ZIP.CODE\", \"RESIDENTIAL.UNITS\", \"COMMERCIAL.UNITS\",\n                                   \"TOTAL.UNITS\", \"LAND.SQUARE.FEET\", \"GROSS.SQUARE.FEET\", \"YEAR.BUILT\",\n                                   \"TAX.CLASS.AT.TIME.OF.SALE\", \"BUILDING.CLASS.AT.TIME.OF.SALE\", \"SALE.PRICE\",\n                                   \"SALE.DATE\")\n  return(nyc_sales_dataset)\n}\n\nrollingsales_brooklyn <- factorize(rollingsales_brooklyn)\n\n# filter the data\n# rollingsales_brooklyn <- rollingsales_brooklyn[rollingsales_brooklyn$\"TOTAL.UNITS\" <2000,]\n# rollingsales_brooklyn <- rollingsales_brooklyn[rollingsales_brooklyn$SALE.PRICE <5e7,]\n# rollingsales_brooklyn <- rollingsales_brooklyn[rollingsales_brooklyn$SALE.PRICE > 1000,]\n\nrollingsales_brooklyn <- rollingsales_brooklyn[rollingsales_brooklyn$LAND.SQUARE.FEET >0 &\n                                                 rollingsales_brooklyn$YEAR.BUILT >0 &\n                                                 rollingsales_brooklyn$GROSS.SQUARE.FEET>0 &\n                                                 rollingsales_brooklyn$TOTAL.UNITS>0 &\n                                                 rollingsales_brooklyn$SALE.PRICE>1000 &\n                                                 rollingsales_brooklyn$SALE.PRICE < 25000000 &\n                                                 rollingsales_brooklyn$ZIP.CODE != 0 &\n                                                 rollingsales_brooklyn$GROSS.SQUARE.FEET < 10000 &\n                                                 rollingsales_brooklyn$LAND.SQUARE.FEET < 10000,]\n\nboxplot(rollingsales_brooklyn$LAND.SQUARE.FEET, rollingsales_brooklyn$GROSS.SQUARE.FEET,\n  names=c(\"LAND.SQUARE.FEET\", \"GROSS.SQUARE.FEET\"))\nhist(rollingsales_brooklyn$LAND.SQUARE.FEET)\nhist(rollingsales_brooklyn$GROSS.SQUARE.FEET)\n\n# boxplot(rollingsales_brooklyn)\nlibrary(party)\na <- ctree(SALE.PRICE ~ LAND.SQUARE.FEET+ GROSS.SQUARE.FEET+RESIDENTIAL.UNITS+\n             COMMERCIAL.UNITS+TOTAL.UNITS+TAX.CLASS.AT.TIME.OF.SALE+\n             BUILDING.CLASS.AT.TIME.OF.SALE,\n           data=rollingsales_brooklyn)\n\nb <- ctree(LAND.SQUARE.FEET ~ TAX.CLASS.AT.TIME.OF.SALE+TOTAL.UNITS + GROSS.SQUARE.FEET+RESIDENTIAL.UNITS+ \n          COMMERCIAL.UNITS+ + SALE.PRICE + \n          BUILDING.CLASS.AT.TIME.OF.SALE + ZIP.CODE + SALE.DATE + YEAR.BUILT, data=rollingsales_brooklyn)\n\n# b <- lm(SALE.PRICE ~ LAND.SQUARE.FEET+ GROSS.SQUARE.FEET+RESIDENTIAL.UNITS+ \n#           COMMERCIAL.UNITS+TOTAL.UNITS+TAX.CLASS.AT.TIME.OF.SALE+ \n#           BUILDING.CLASS.AT.TIME.OF.SALE + ZIP.CODE + SALE.DATE + YEAR.BUILT, data=rollingsales_brooklyn)\na <- ctree(BUILDING.CLASS.AT.TIME.OF.SALE ~ LAND.SQUARE.FEET + GROSS.SQUARE.FEET + RESIDENTIAL.UNITS+\n          COMMERCIAL.UNITS+TOTAL.UNITS + SALE.PRICE + TAX.CLASS.AT.TIME.OF.SALE\n           + ZIP.CODE + SALE.DATE + YEAR.BUILT, data=rollingsales_brooklyn)\nplot(a)\n\nc <- lm(LAND.SQUARE.FEET ~ TAX.CLASS.AT.TIME.OF.SALE+TOTAL.UNITS + GROSS.SQUARE.FEET+RESIDENTIAL.UNITS+ \n          COMMERCIAL.UNITS+ + SALE.PRICE + \n          BUILDING.CLASS.AT.TIME.OF.SALE + ZIP.CODE + SALE.DATE + YEAR.BUILT, data=rollingsales_brooklyn)\n\nd <- lm(LAND.SQUARE.FEET ~ GROSS.SQUARE.FEET+COMMERCIAL.UNITS+ SALE.PRICE + \n          BUILDING.CLASS.AT.TIME.OF.SALE + ZIP.CODE + YEAR.BUILT, data=rollingsales_brooklyn)\n\nsummary(d)\n\nlibrary(class)\nseed(2791)\nsample_rate <- 0.7\n\nrelevant_columns <- c(\"GROSS.SQUARE.FEET\",\"COMMERCIAL.UNITS\",\"SALE.PRICE\",\"BUILDING.CLASS.AT.TIME.OF.SALE\",\"ZIP.CODE\",\"YEAR.BUILT\")\n\ntraining_ids <- sample(1:nrow(rollingsales_brooklyn), sample_rate*nrow(rollingsales_brooklyn))\ntraining_data <- subset(rollingsales_brooklyn[training_ids,], select=relevant_columns)\n\ntesting_ids <- setdiff(1:nrow(rollingsales_brooklyn), training_ids)\ntesting_data <- subset(rollingsales_brooklyn[testing_ids,], select=relevant_columns)\n\ntraining_lsqf <- rollingsales_brooklyn$LAND.SQUARE.FEET[training_ids]\ntesting_lsqf <- rollingsales_brooklyn$LAND.SQUARE.FEET[testing_ids]\n\n# use KNN to classify test data\nknn_results <- knn(train=training_data, test=testing_data, cl=training_lsqf, k=5)\n# transform KNN results from factor (AKA ENUM) to numeric\nknn_results <- as.numeric(as.character(knn_results))\n\n# make a plot to see how the model performed\nplot(testing_lsqf, knn_results)\n\n\n\n",
    "created" : 1522948318448.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "393437525",
    "id" : "3C5238D8",
    "lastKnownWriteTime" : 1488576578,
    "last_content_update" : 1488576578,
    "path" : "~/Dropbox/RPI/Spring_2017/ITWS-6600 Data Analytics/Assignments/Assignment 4/code/main.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}