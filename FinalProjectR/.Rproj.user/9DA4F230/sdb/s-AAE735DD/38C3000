{
    "collab_server" : "",
    "contents" : "imgDir <- \"/Users/mllewellyn/Dropbox/RPI/Spring_2017/ITWS-6600 Data Analytics/Assignments/Assignment 6/plots/\"\n\n#### Data Import ####\nlibrary(readr)\nmdf_all <- read_csv(\"~/Dropbox/RPI/Spring_2017/ITWS-6600 Data Analytics/Assignments/Assignment 6/data/r_input.csv\",\n                          col_types = cols(\n                            PURCHASE_ID = col_character(),\n                            TENDER_TYPE = col_factor(c(\"CASH\", \"CREDIT_CARD\", \"GENERIC\", \"NO_SALE\", \"OTHER\")),\n                            DAY_OF_WEEK = col_factor(c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")),\n                            MONTH = col_integer(),\n                            HOUR_OF_DAY = col_integer(),\n                            TOTAL_COST = col_double(),\n                            AVERAGE_COST = col_double(),\n                            TIP = col_double(),\n                            NUM_NORMAL_QUESADILLAS = col_integer(),\n                            NUM_SPECIAL_QUESADILLAS = col_integer(),\n                            NUM_DRINKS = col_integer(),\n                            NUM_DESSERTS = col_integer(),\n                            NUM_PLATTERS = col_integer(),\n                            NUM_ROCKING_ON_RIVER = col_integer(),\n                            NUM_SIDES = col_integer(),\n                            NUM_OTHER = col_integer(),\n                            NUM_ICECREAM = col_integer(),\n                            NUM_RESTAURANT_WEEK = col_integer(),\n                            NUM_UNCATEGORIZED = col_integer(),\n                            TOTAL_ITEMS = col_integer()\n                          ))\n# The purchase ID is just so I can look at the whole purcahse if something interesting pops up\nmdf <- mdf_all[c(\"TENDER_TYPE\", \"DAY_OF_WEEK\", \"MONTH\", \"HOUR_OF_DAY\",\n                 \"TOTAL_COST\", \"AVERAGE_COST\", \"TIP\", \"NUM_NORMAL_QUESADILLAS\", \"NUM_SPECIAL_QUESADILLAS\",\n                 \"NUM_DRINKS\", \"NUM_DESSERTS\", \"NUM_PLATTERS\", \"NUM_ROCKING_ON_RIVER\",\n                 \"NUM_SIDES\", \"NUM_OTHER\", \"NUM_ICECREAM\",\n                 \"NUM_RESTAURANT_WEEK\", \"NUM_UNCATEGORIZED\", \"TOTAL_ITEMS\")]\n\n# NOTE: Total items is not in this because it is a sum of the other totals. Average cost is also omitted for the same reason.\nmdf_only_numbers <- mdf[c(\"MONTH\", \"HOUR_OF_DAY\", \"TOTAL_COST\", \"TIP\",\n                          \"NUM_NORMAL_QUESADILLAS\", \"NUM_SPECIAL_QUESADILLAS\", \"NUM_DRINKS\",\n                          \"NUM_DESSERTS\", \"NUM_PLATTERS\", \"NUM_ROCKING_ON_RIVER\", \"NUM_SIDES\",\n                          \"NUM_OTHER\", \"NUM_ICECREAM\", \"NUM_RESTAURANT_WEEK\", \"NUM_UNCATEGORIZED\")]\n# View(mdf_purchases)\n\n\n#### Data Exploration ####\n\n# Everything boxplot\nboxplot(mdf[c(\"TENDER_TYPE\", \"DAY_OF_WEEK\", \"MONTH\", \"HOUR_OF_DAY\",\n                      \"TOTAL_COST\", \"AVERAGE_COST\", \"TIP\", \"NUM_NORMAL_QUESADILLAS\", \"NUM_SPECIAL_QUESADILLAS\",\n                      \"NUM_DRINKS\", \"NUM_DESSERTS\", \"NUM_PLATTERS\", \"NUM_ROCKING_ON_RIVER\",\n                      \"NUM_SIDES\", \"NUM_OTHER\", \"NUM_ICECREAM\",\n                      \"NUM_RESTAURANT_WEEK\", \"NUM_UNCATEGORIZED\", \"TOTAL_ITEMS\")])\n\n# Box plot of times\nboxplot(mdf[c(\"DAY_OF_WEEK\", \"MONTH\", \"HOUR_OF_DAY\")])\n\n# Box plot of item counts\nboxplot(mdf[c(\"NUM_NORMAL_QUESADILLAS\", \"NUM_SPECIAL_QUESADILLAS\",\n              \"NUM_DRINKS\", \"NUM_DESSERTS\", \"NUM_PLATTERS\", \"NUM_ROCKING_ON_RIVER\",\n              \"NUM_SIDES\", \"NUM_OTHER\", \"NUM_ICECREAM\",\n              \"NUM_RESTAURANT_WEEK\", \"NUM_UNCATEGORIZED\", \"TOTAL_ITEMS\")])\n\n# Box plot of costs\nboxplot(mdf[c(\"TOTAL_COST\", \"AVERAGE_COST\", \"TIP\")])\n\n\n\nlibrary(car)\n\n# png(paste(imgDir, \"scatterplotMatrix2000.png\", sep=\"\"), width=2000, height=2000)\n# scatterplotMatrix(mdf)\n# dev.off()\n\n\ncor(mdf_only_numbers)\n\nrequire(psych)\nscree(mdf_only_numbers)\n\n# # look at how many eigen values are above 1\n# pfa.eigen<-eigen(cor(mdf_only_numbers))\n# pfa.eigen$values\n# \n# plot(eigen(cor(mdf_only_numbers))$values)\n\n# mdf_fa <- fa(mdf_only_numbers, 5)\n# mdf_fa$loadings\n\nmdf_pca <- prcomp(mdf_only_numbers)\nsummary(mdf_pca)\n\n\n\n#### Data Modeling ####\n\n# Add another column to the data to see if we can predict tipping\nmdf$DID_TIP <- factor(mdf$TIP > 0)\n\n# Seperate test data and training data\nseed(2791)\nsample_rate <- 0.7\n\n# TODO Add in selecting only input columns if needed for KNN\ntraining_ids <- sample(1:nrow(mdf), sample_rate*nrow(mdf))\nmdf_train <- subset(mdf[training_ids,])\n\ntesting_ids <- setdiff(1:nrow(mdf), training_ids)\nmdf_test <- subset(mdf[testing_ids,])\n\n\nlibrary(party)\n\ndid_tip_formula_hard_way <- formula(DID_TIP~ +MONTH +HOUR_OF_DAY +TOTAL_COST +AVERAGE_COST\n                            +NUM_NORMAL_QUESADILLAS +NUM_SPECIAL_QUESADILLAS +NUM_DRINKS\n                            +NUM_DESSERTS +NUM_PLATTERS +NUM_ROCKING_ON_RIVER +NUM_SIDES\n                            +NUM_OTHER +NUM_ICECREAM +NUM_RESTAURANT_WEEK +NUM_UNCATEGORIZED\n                            +TOTAL_ITEMS)\n\n\ndid_tip_tree <- ctree(did_tip_formula_hard_way, data=mdf_train)\nplot(did_tip_tree)\ntable(predict(did_tip_tree, newdata=mdf_test), mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\nlibrary(e1071)\n\ndid_tip_SVM <- svm(did_tip_formula_hard_way, data=mdf_train)\nprint(\"C-classification linear SVM Results\")\ntable(predict(did_tip_SVM, newdata=mdf_test), mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\ndid_tip_SVM <- svm(did_tip_formula_hard_way, data=mdf_train, kernal=polynomial)\nprint(\"C-classification polynomial SVM Results\")\ntable(predict(did_tip_SVM, newdata=mdf_test), mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\ndid_tip_SVM <- svm(did_tip_formula_hard_way, data=mdf_train, kernal=\"radial basis\")\nprint(\"C-classification radial basis SVM Results\")\ntable(predict(did_tip_SVM, newdata=mdf_test), mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\ndid_tip_SVM <- svm(did_tip_formula_hard_way, data=mdf_train, kernal=sigmoid)\nprint(\"C-classification sigmoid SVM Results\")\ntable(predict(did_tip_SVM, newdata=mdf_test), mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(class)\n# use KNN to classify test data\nknn_results <- knn(train=mdf_only_numbers[training_ids,], test=mdf_only_numbers[testing_ids,], cl=mdf$DID_TIP[training_ids], k=5)\ntable(knn_results, mdf_test$DID_TIP, dnn=c(\"Predicted\", \"Real\"))\n\n\n\n\n# # this model is garbage\n# hour_lm <- lm(HOUR_OF_DAY~., data=mdf_train)\n# summary(hour_lm)\n# \n# # this model is garbage too\n# tip_lm <- lm(TIP~., data=mdf_train)\n# summary(hour_lm)\n\n\n\n\n\n\n\n\n\n",
    "created" : 1522948362529.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2472642136",
    "id" : "38C3000",
    "lastKnownWriteTime" : 1492816179,
    "last_content_update" : 1492816179,
    "path" : "~/Dropbox/RPI/Spring_2017/ITWS-6600 Data Analytics/Assignments/Assignment 6/code/R/mainv1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}